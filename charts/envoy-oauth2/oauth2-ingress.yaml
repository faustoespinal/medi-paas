apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: oauth2-ingress
  namespace: istio-system
spec:
  workloadSelector:
    labels:
      app: istio-ingress
  configPatches:
  - applyTo: CLUSTER
    match:
      cluster:
        service: oauth
    patch:
      operation: ADD
      value:
        name: oauth
        dns_lookup_family: V4_ONLY
        type: LOGICAL_DNS
        connect_timeout: 10s
        lb_policy: ROUND_ROBIN
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            sni: test-apps-istio.karofa:30443
        load_assignment:
          cluster_name: oauth
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: test-apps-istio.karofa
                    port_value: 30443
  - applyTo: HTTP_FILTER
    match:
      context: GATEWAY
      listener:
        filterChain:
          filter:
            name: "envoy.filters.network.http_connection_manager"
            subFilter:
              name: "envoy.filters.http.jwt_authn"
    patch:
      operation: INSERT_BEFORE
      value:
       name: envoy.filters.http.oauth2
       typed_config:
         "@type": type.googleapis.com/envoy.extensions.filters.http.oauth2.v3.OAuth2
         config:
          token_endpoint:
            cluster: oauth
            uri: https://keycloak.karofa:30443/realms/cedimat/protocol/openid-connect/token
            timeout: 3s
          authorization_endpoint: https://keycloak.karofa:30443/realms/cedimat/protocol/openid-connect/auth
          redirect_uri: "%REQ(x-forwarded-proto)%://%REQ(:authority)%/callback"
          redirect_path_matcher:
            path:
              exact: /callback
          signout_path:
            path:
              exact: /signout
          credentials:
            client_id: test-apps-istio
            token_secret:
              name: token
              sds_config:
                path: "/etc/istio/proxy/token-secret.yaml"
            hmac_secret:
              name: hmac
              sds_config:
                path: "/etc/istio/proxy/hmac-secret.yaml"
          pass_through_matcher:
            - name: authorization
              prefix_match: Bearer
          auth_scopes:
            - profile
            - openid
            - email
          forward_bearer_token: true

# secrets:
# - name: token
#   generic_secret:
#     secret: <Your token secret here>
# - name: hmac
#   generic_secret:
#     secret: <Your hmac secret here>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: istio-oauth2
  namespace: istio-system
data:
  token-secret.yaml: |-
    resources:
      - "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.Secret"
        name: token
        generic_secret:
          secret:
            inline_string: "NW9TdzdINW80WlNDMklsZnhqeE9ldXloZXRoOGo1ZmgK"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: istio-oauth2-hmac
  namespace: istio-system
data:
  hmac-secret.yaml: |-
    resources:
      - "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.Secret"
        name: hmac
        generic_secret:
          secret:
            inline_bytes: znA9jsNg6YRZdsfpRqE7fYgtJ6T3JqEClZmqvgp29AU=
            # generated using `head -c 32 /dev/urandom | base64`
---
apiVersion: security.istio.io/v1beta1
kind: RequestAuthentication
metadata:
  name: jwt-authentication
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: istio-ingress
  jwtRules:
    - issuer: "http://md-keycloak.md-security/realms/cedimat"
      jwksUri: "http://md-keycloak.md-security/realms/cedimat/protocol/openid-connect/certs"
      forwardOriginalToken: true
      # audiences:
      #   - test
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: known-user
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: istio-ingress
  rules:
  - to:
      - operation:
          hosts: ["*"]
          notPaths: ["/realms/*"]
  - when:
    - key: request.headers[Authorization]
      notValues:
      - 'Bearer*'
  # - when:
  #   - key: request.auth.audiences
  #     values: 
  #       - 'test'
  #   - key: request.auth.presenter
  #     values:
  #       - test
---