---
apiVersion: batch/v1
kind: Job
metadata:
  name: setup-data-keycloak
  labels:
    app: setup-data-keycloak
    sourceapp: setup-sample-keycloak
    sourceversion: 1.0.0
    sourceappversion: 1.0.0
spec:
  backoffLimit: {{ .Values.setup_data_keycloak.backoffLimit }}
  template:
    metadata:
      labels:
        app: setup-data-keycloak
        sidecar.istio.io/inject: "false"
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: setup-data-keycloak
      {{- end }}
      restartPolicy: Never
      volumes:
        - name: setup-script
          configMap:
            name: cmd-script
        - name: orgs-data
          configMap:
            name: orgs-data
      containers:
      - name: setup-data-keycloak
        image: {{ .Values.setup_data_keycloak.image.repository }}:{{ .Values.setup_data_keycloak.image.tag }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        command: [ "node" ]
        args: [ "/app/src/cmd.js", "/tmp/orgs-data.yaml" ]
        volumeMounts:
        - name: setup-script
          mountPath: /app/src/cmd.js
          subPath: cmd.js
        - name: orgs-data
          mountPath: /tmp/orgs-data.yaml
          subPath: orgs-data.yaml
        env:
        - name: KEYCLOAK_SVC_ROOT
          value: "http://md-keycloak.md-security"
        - name: KEYCLOAK_ADMIN_USR
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.setup_data_keycloak.keycloak.release }}-env-vars
              key: KEYCLOAK_ADMIN_USER
        - name: KEYCLOAK_ADMIN_PWD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.setup_data_keycloak.keycloak.release }}
              key: admin-password
        securityContext:
          runAsUser: 1000
        {{ if .Values.setup_data_keycloak.resources }}
        resources: {{- toYaml .Values.setup_data_keycloak.resources | nindent 8 }}
        {{ end }}
