apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "orthanc.fullname" . }}
  namespace: {{ $.Release.Namespace | quote }}
  labels:
    {{- include "orthanc.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "orthanc.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "orthanc.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "orthanc.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-mydb
          image: busybox
          command: ['sh','-c',"until nc -vz $DB_ADDR $DB_PORT; do echo waiting DB service at $DB_ADDR:$DB_PORT; sleep 3; done"]
          env:
            - name: DB_ADDR
              valueFrom:
                configMapKeyRef:
                  name: orthanc-app
                  key: db.addr
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: orthanc-app
                  key: db.port
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          args: ["/run/secrets/"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.httpPort }}
              protocol: TCP
            - name: dicom
              containerPort: {{ .Values.service.dicomPort }} 
              protocol: TCP
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "zalando.{{ .Values.postgres.name }}.credentials.postgresql.acid.zalan.do"
                  key: password
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: "zalando.{{ .Values.postgres.name }}.credentials.postgresql.acid.zalan.do"
                  key: username
            - name: DB_ADDR
              valueFrom:
                configMapKeyRef:
                  name: orthanc-app
                  key: db.addr
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: orthanc-app
                  key: db.port
          volumeMounts:
          - name: app-cm-vol
            mountPath: "/run/secrets/orthanc.json"
            subPath: "orthanc.json"
            readOnly: true
          readinessProbe:
            httpGet:
              path: /app/explorer.html
              port: http
              scheme: HTTP
              httpHeaders:
                - name: Authorization
                  value: Basic {{ "orthanc:orthanc" | b64enc }}  
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 2
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: app-cm-vol
        configMap:
          name: orthanc-app
          defaultMode: 0755
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
